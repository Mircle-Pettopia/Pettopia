<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.pettopia.review.mapper.ReviewMapper">

	<!-- 작성 가능한 후기 목록 -->
	<select id="selectReviewList" resultType="ReviewVO">
		select me_id, ordt.ordt_id, ordt.prdt_id,
		TO_DATE(ordr_date,
		'rrrr-MM-dd') ordr_date, prdt_img, prdt_nm
		FROM
		order_header ordr
		JOIN
		order_detail ordt
		ON ordr.ordr_id = ordt.ordr_id
		JOIN product pr
		ON
		ordt.prdt_id = pr.prdt_id
		JOIN product_img img
		ON ( pr.prdt_id = img.prdt_id and is_main = 'Y')
		AND ordr.me_id = #{meId}
		AND ship_st = 'SS3'
		AND not exists ( SELECT re_no from review r where r.ordt_id =
		ordt.ordt_id)


		<!-- SELECT me_id, ordt.ordt_id, ordt.prdt_id, TO_DATE(ordr_date, 'rrrr-MM-dd') 
			ordr_date, prdt_img, prdt_nm FROM order_header ordr JOIN order_detail ordt 
			ON ordr.ordr_id = ordt.ordr_id JOIN product pr ON ordt.prdt_id = pr.prdt_id 
			JOIN product_img img ON pr.prdt_id = img.prdt_id WHERE is_main = 'Y' AND 
			ship_st = 'SS3' AND me_id = #{meId} -->
	</select>





	<!-- <select id="totalCount" resultType="int">
	  	SELECT COUNT(*)
		FROM (
		select me_id, ordt.ordt_id, ordt.prdt_id,
		TO_DATE(ordr_date, 'rrrr-MM-dd')
		ordr_date, prdt_img, prdt_nm
		FROM
		order_header ordr
		JOIN order_detail
		ordt
		ON ordr.ordr_id = ordt.ordr_id
		JOIN product pr
		ON ordt.prdt_id =
		pr.prdt_id
		JOIN product_img img
		ON ( pr.prdt_id = img.prdt_id and is_main = 'Y')
		AND ordr.me_id = #{meId}
		AND ship_st = 'SS3'
		AND not exists ( SELECT re_no from review r where r.ordt_id =
		ordt.ordt_id)
		)
	</select> -->

	<!-- 내가 작성한 후기 목록 -->
	<select id="selectWrittenList" resultType="ReviewVO">
		SELECT RE_NO, prdt_img, p.prdt_id, prdt_nm, CONTENTS, CREAT_DT, POINT, r.ME_ID, ORDT_ID,
		p.prdt_id
		FROM review r
		JOIN product p
		ON r.prdt_id = p.prdt_id
		JOIN product_img img
		ON p.prdt_id = img.prdt_id
		WHERE is_main = 'Y'
		AND r.me_id = #{meId}
		ORDER BY RE_NO DESC
	</select>
	
		
	<!-- 후기 등록 -->
	<insert id="insertReview" parameterType="ReviewVO">
		INSERT INTO review (
		RE_NO,
		CONTENTS,
		CREAT_DT,
		POINT,
		ME_ID,
		ORDT_ID,
		PRDT_ID
		)
		VALUES (
		(SELECT
		NVL(MAX(re_No), 0) + 1 FROM review),
		#{contents},
		sysdate,
		#{point},
		#{meId},
		#{ordtId},
		#{prdtId}
		)
	</insert>
	
		<!--후기 수정 -->
	<update id="updateReview" parameterType="ReviewVO">
		UPDATE review
			SET contents = #{contents},
				point = #{point}
			WHERE re_no = #{reNo}
	</update>
	
	
	
	<!-- 후기 삭제 -->
	<delete id="deleteReview" parameterType="int">
		DELETE FROM review WHERE re_no=#{reNo}
	</delete>

	<!-- 작성한 후기 상세 -->
	<select id="writtenDetail" resultType="ReviewVO">
		SELECT contents, point
		FROM review
		WHERE re_no = #{reNo}
	</select>
	
		<select id="optionDetail" resultType="ReviewVO">
		SELECT
	        DISTINCT odo.ordt_id,
		    LISTAGG(pod.opt_deta_nm, ',')
		    WITHIN GROUP (ORDER BY opt_deta_nm)
		    OVER(PARTITION BY odo.ordt_id) opt_deta_nm
		FROM
		    ORDER_DETAIL_OPTION odo JOIN PRODUCT_OPTION_DETAIL pod
		ON
		    odo.OPT_DETA_ID = pod.OPT_DETA_ID
		WHERE
		    ORDT_ID = #{ordtId}
	</select>
	

</mapper>